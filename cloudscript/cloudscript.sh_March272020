#!/usr/bin/env bash
# -- debug
set -x

# -- check IF puppet installed
if ! [ -x "$(command -v puppet)" ]; then
  # -- set hostname on vm
  hostname "$HOSTNAME.us.deloitte.com"

  # -- delcare settings
  str=$'[main]\ndns=none'
  dns=$'# Generated by NetworkManager\nsearch us.deloitte.com\nnameserver 10.218.0.146\nnameserver 10.218.32.155\nnameserver 10.218.0.147\nnameserver 10.218.32.135'
  puppet_conf=$'[main]\nserver = uspup-cm.us.deloitte.com'

  # -- check for RHEL /etc/resolv.conf reboot clearning DNS
  if [ -d /etc/NetworkManager/conf.d ]; then
    echo "$str" > /etc/NetworkManager/conf.d/no-dns.conf
  fi

  # -- create the custom facts
  mkdir -p /opt/puppetlabs/facter/facts.d/
  touch /opt/puppetlabs/facter/facts.d/deloitte.yaml
  echo -e "deloitte_greenfield : true\ngreenfield : true" > /opt/puppetlabs/facter/facts.d/deloitte.yaml

  # -- update DNS
  echo "$dns" > /etc/resolv.conf

  # -- check if DNS is avail
  while ! ping -c1 10.218.0.147 &>/dev/null
          do echo "Ping Fail for east DNS 10.218.0.147 - `date`"
  done
  echo "DNS servers Found - 10.218.0.147 `date`"

  # -- check if DNS is avail
  while ! ping -c1 10.218.32.135 &>/dev/null
          do echo "Ping Fail for west DNS 10.218.32.135 - `date`"
  done
  echo "DNS servers Found - 10.218.32.135 `date`"

  sleep 30 

  # -- Ubuntu 18.04 True all other OS
  os_check=$(grep 18.04 /etc/issue.net)
  if [ "$os_check" != "" ]; then
    wget https://apt.puppetlabs.com/puppet5-release-xenial.deb
    dpkg -i puppet5-release-xenial.deb
    apt-get update -y
    apt-get install puppet-agent -y
  else
    # -- RHEL && Ubuntu < 18.04
    curl -sS -k https://uspup-cm.us.deloitte.com:8140/packages/current/install.bash -o install.sh
    ps aux |grep -i apt && sleep 20
    bash -x install.sh
  fi

  # -- export PATH to puppet executable
  export PATH=/opt/puppetlabs/bin:$PATH

  # -- update puppet.conf
  echo "$puppet_conf" > /etc/puppetlabs/puppet/puppet.conf

  # -- enable & restart
  /opt/puppetlabs/bin/puppet resource service puppet enable=true
  systemctl restart puppet
fi

sleep 600

function addStaticSG () {
## --- Add SG's to VMs

# -- vars
sg_file_location="/etc/login.group.allowed"

# -- defind our SG's, if you need more sg's add here
declare -a sg_names=("sg-us_gcp_ame_ena_gcp_admins")

# -- if file exists update with SG
if [ -e "$sg_file_location" ]; then
for sg in ${sg_names[@]};
  do
  grep -qF "$sg" "$sg_file_location" || echo "$sg" | sudo tee --append "$sg_file_location"
done
fi
}

function addProjectSG () {
# -- begin to apply project named SG's

file="/etc/login.group.allowed"

# -- collect a clean project name 
project=($(gcloud config get-value project))

# -- format and build new array 
for each in "${project[@]}";
do
	projects_formatted+=($(echo "${each}" | tr '-' '_'))
done

# -- print new array
for i in "${projects_formatted[@]}";
do
  grep -qF sg_"${projects_formatted[$i]}"_devops "$file" || echo sg_"${projects_formatted[$i]}"_devops | sudo tee -a "$file"
done
}

# -- call functions to apply 
addStaticSG
addProjectSG
